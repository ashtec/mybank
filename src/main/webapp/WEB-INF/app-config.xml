<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:camel="http://camel.apache.org/schema/spring"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="
    http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
    http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
    http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd
	http://camel.apache.org/schema/spring http://camel.apache.org/schema/spring/camel-spring.xsd
    http://camel.apache.org/schema/cxf http://camel.apache.org/schema/cxf/camel-cxf.xsd">

	<!-- Scans the classpath of this application for @Components to deploy as 
		beans -->
	<context:component-scan
		base-package="com.mybank" />

	<bean id="TransformBean"
		class="com.mybank.api.transaction.routes.TransformTransactionsRespProcessor" />
	<bean id="TotalAmountBean"
		class="com.mybank.api.transaction.routes.TransactionAmountProcessor" />

	<sslContextParameters id="sslContextParameters"
		xmlns="http://camel.apache.org/schema/spring">
		<secureSocketProtocols>
			<!-- Do NOT enable SSLv3 (POODLE vulnerability) -->
			<secureSocketProtocol>TLSv1</secureSocketProtocol>
			<secureSocketProtocol>TLSv1.1</secureSocketProtocol>
			<secureSocketProtocol>TLSv1.2</secureSocketProtocol>
		</secureSocketProtocols>
		<trustManagers>
			<keyStore
				resource="/Library/Java/JavaVirtualMachines/jdk1.8.0_25.jdk/Contents/Home/jre/lib/security/cacerts"
				password="changeit" />
		</trustManagers>
	</sslContextParameters>

	<camelContext id="get-all-transactions" trace="false"
		xmlns="http://camel.apache.org/schema/spring">

		<propertyPlaceholder id="properties" location="camelcontext.properties"/>
		
		<endpoint id="call-transactions-api"
			uri="https://apisandbox.openbankproject.com/obp/v1.2.1/banks/rbs/accounts/savings-kids-john/public/transactions" />

		<route id="call-get-transaction-list">
			<from uri="direct:gettransactionlist" />
			<setHeader headerName="CamelHttpMethod">
				<constant>GET</constant>
			</setHeader>
			<to ref="call-transactions-api" />
			<process ref="TransformBean" />
		</route>

		<route id="call-get-transaction-list-by-type">
			<from uri="direct:gettransactionlistByType" />
			
			<setProperty propertyName="TRANSTYPE">
				<constant>${header.transactionType}</constant>
			</setProperty>
			
			<log message="Got ${header.transactionType}" loggingLevel="INFO"/>
			<setHeader headerName="CamelHttpMethod">
				<constant>GET</constant>
			</setHeader>

			<to ref="call-transactions-api" />
			<process ref="TransformBean" />
			<transform>
				<!--  commenting for now --> 
				<!-- <jsonpath>$.transactions[?(@.transactionType =='{{TRANSTYPE}}')]</jsonpath> -->
				<jsonpath>$.transactions[?(@.transactionType =='sandbox-payment')]</jsonpath>
			</transform>
			<transform>
				<simple> {\n \t\t "transactions": ${body} \n \} </simple>
			</transform>
		</route>

		<route id="call-get-total-Amount">
			<from uri="direct:gettransactionTotalAmount" />
			<setHeader headerName="CamelHttpMethod">
				<constant>GET</constant>
			</setHeader>
			<to ref="call-transactions-api" />
			<process ref="TotalAmountBean" />
			<transform>
				<simple> {\n 'totalAmount': '${body}' \n \} </simple>
			</transform>
		</route>

	</camelContext>

</beans>